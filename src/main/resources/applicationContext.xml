<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 1、引入外部属性配置 -->
	<context:property-placeholder location="classpath:db.properties" />
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- set the max upload size100MB -->
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	<!-- 2、数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<!--maxActive: 最大连接数量 -->
		<property name="maxActive" value="150" />
		<!--minIdle: 最小空闲连接 -->
		<property name="minIdle" value="5" />
		<!--maxIdle: 最大空闲连接 -->
		<property name="maxIdle" value="20" />
		<!--initialSize: 初始化连接 -->
		<property name="initialSize" value="30" />
		<!-- 连接被泄露时是否打印 -->
		<property name="logAbandoned" value="true" />
		<!--removeAbandoned: 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true" />
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="10" />
		<!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒 -->
		<property name="maxWait" value="1000" />
		<!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->
		<property name="timeBetweenEvictionRunsMillis" value="10000" />
		<!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun" value="10" />
		<!-- 1000 * 60 * 30 连接在池中保持空闲而不被空闲连接回收器线程 -->
		<property name="minEvictableIdleTimeMillis" value="10000" />
		<property name="validationQuery" value="SELECT NOW() FROM DUAL" />
	</bean>
	<!-- 3、Mybatis的核心配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />

		<!-- 类型别名 -->
		<property name="typeAliasesPackage" value="com.wyl.crm.domain,com.wyl.crm.query"></property>

		<!-- Mapper映射(内置自动根据“接口全类名”和“mapper配置文件的命名空间”同名匹配原则) -->
		<property name="mapperLocations" value="classpath:com/wyl/crm/mapper/*Mapper.xml"></property>

	</bean>

	<!-- 4、引入外部配置文件 -->
	<import resource="classpath:applicationContext-*.xml" />

	<!-- 5、 事务配置 1）事务管理器 2）切面 3）通知 -->
	<!--事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 切面 com.wyl.crm.service..*.*(..) ..* : 匹配在之前目录下的所有资源（包括子或子的子） 最后个.* 
		：匹配类的方法，代表所有方法的意思 (..) ： 方法上的任意参数 -->
	<aop:config>
		<aop:pointcut id="crmPointcut"
			expression="execution(* com.wyl.crm.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="crmPointcut" />
	</aop:config>
	<!-- 通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="list*" propagation="SUPPORTS" read-only="true" />
			<!-- 除了查询以外，都需要开启事务 -->
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 系统日志 -->
	<!-- <bean id="logUtils" class="com.wyl.crm.utils.SystemLogUtils"> <property 
		name="logService" ref="systemLogServiceImpl"></property> </bean> -->
	<aop:config>
		<!-- 切入点 -->
		<aop:pointcut id="logPointcut"
			expression="execution(* com.wyl.crm.service..*.*(..))" />
		<!-- 通知 -->
		<aop:aspect ref="logUtils">
			<aop:after method="writeLog" pointcut-ref="logPointcut" />
		</aop:aspect>
	</aop:config>
</beans>