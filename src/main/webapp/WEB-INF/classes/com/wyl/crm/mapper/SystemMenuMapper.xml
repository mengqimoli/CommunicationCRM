<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : 独立的命名空间，可以使Mapper接口的地址（把dao包改为mapper） 例如： 接口地址为com.wyl.crm.mapper.EmployeeMapper 
	命名空间为com.wyl.crm.mapper.EmployeeMapper（和接口地址相同） 结果：可以不用写Mapper实现，由Spring代理实现 -->
<mapper namespace="com.wyl.crm.mapper.SystemMenuMapper">

	<select id="getMenuByEmpId" parameterType="long" resultMap="menuResultMap">
		select DISTINCT m.id,m.name,m.icon,m.url,c.id cid ,c.name cname ,c.url
		curl ,c.icon cicon
		from t_employee e
		join t_employee_role er on er.employee_id = e.id
		join t_role r on r.id =
		er.role_id
		join t_role_permission rp on rp.role_id = r.id
		join
		t_permission p on p.id = rp.permission_id
		join t_systemmenu m on m.id=
		p.menu_id
		join t_systemmenu c on m.parent_id = c.id
		where e.id=#{e.id}
		and p.menu_id is not null
		order by c.id asc
	</select>

	<resultMap type="SystemMenu" id="menuResultMap">
		<id column="cid" property="id" />
		<result column="cname" property="name" />
		<result column="cicon" property="icon" />
		<result column="curl" property="url" />
		<collection property="children" ofType="SystemMenu"
			javaType="arrayList">
			<id column="id" property="id" />
			<result column="name" property="name" />
			<result column="url" property="url" />
			<result column="icon" property="icon" />
		</collection>
	</resultMap>

	<!-- 建表语句 -->
	<update id="createTable">
		CREATE TABLE IF NOT EXISTS `t_systemmenu` (
		`id`
		bigint(20) NOT NULL AUTO_INCREMENT,
		`name` varchar(255) NOT NULL,
		`sn`
		varchar(255) NOT NULL,
		`url` varchar(255) DEFAULT NULL,
		`icon`
		varchar(255) DEFAULT NULL,
		`intro` varchar(255) DEFAULT NULL,
		`parent_id` bigint(20) DEFAULT NULL,
		PRIMARY KEY (`id`)
		) ENGINE=InnoDB
		AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
	</update>

	<insert id="save" parameterType="SystemMenu" keyProperty="id"
		useGeneratedKeys="true">
		insert into
		t_systemmenu(name,sn,url,icon,intro,parent_id)
		values(#{name},#{sn},#{url},#{icon},#{intro},#{parent.id})
	</insert>

	<delete id="delete" parameterType="long">
		delete from t_systemmenu where
		id=#{id}
	</delete>

	<update id="update" parameterType="SystemMenu">
		update t_systemmenu
		<set>
			name=#{name},
			sn=#{sn},
			url=#{url},
			icon=#{icon},
			intro=#{intro},
			parent_id=#{parent.id}
		</set>
		where
		id=#{id}
	</update>

	<select id="getOne" parameterType="long" resultType="SystemMenu">
		select *
		from
		t_systemmenu where id = #{id}
	</select>

	<select id="getAll" resultType="SystemMenu">
		select * from t_systemmenu
	</select>

	<!-- 根据用户id获取菜单列表 -->
	<select id="getSystemMenuByEmpId" parameterType="long"
		resultMap="menuMap">
		select DISTINCT m.id,m.name,m.icon,m.url,c.id cid ,c.name
		cname ,c.url curl ,c.icon cicon
		from t_employee e
		join t_employee_role er on er.employee_id = e.id
		join t_role r on r.id =
		er.role_id
		join t_role_permission rp on rp.role_id = r.id
		join
		t_permission p on p.id = rp.permission_id
		join t_systemmenu m on m.id=
		p.menu_id
		join t_systemmenu c on m.parent_id = c.id
		where e.id=#{e.id}
		and p.menu_id is not null
		order by c.id desc
	</select>

	<resultMap type="SystemMenu" id="menuMap">
		<id column="cid" property="id" />
		<result column="cname" property="name" />
		<result column="cicon" property="icon" />
		<result column="curl" property="url" />
		<collection property="children" ofType="SystemMenu"
			javaType="arrayList">
			<id column="id" property="id" />
			<result column="name" property="name" />
			<result column="url" property="url" />
			<result column="icon" property="icon" />
		</collection>
	</resultMap>

	<sql id="whereSql">
		<where>
			<if test="searchKey!=null and searchKey!=''">
				(s.name like #{searchKey} or s.sn like #{searchKey}
				or
				s.url like #{searchKey})
			</if>
		</where>
	</sql>

	<select id="queryPage" parameterType="SystemMenuQuery"
		resultMap="SystemMenuMap">
		select s.id,s.name,s.sn,s.icon,s.url,s.intro,p.id pid,p.name pname
		from t_systemmenu s
		left join t_systemmenu p on (s.parent_id =p.id)
		<include refid="whereSql" />
		<if test="pageSize!=-1">
			limit #{start},#{pageSize}
		</if>
	</select>

	<resultMap type="SystemMenu" id="SystemMenuMap">
		<id column="id" property="id" />
		<result column="sn" property="sn" />
		<result column="name" property="name" />
		<result column="icon" property="icon" />
		<result column="url" property="url" />
		<result column="intro" property="intro" />
		<association property="parent" column="parent_id"
			javaType="SystemMenu">
			<id column="pid" property="id" />
			<result column="pname" property="name" />
		</association>
	</resultMap>

	<select id="queryCount" resultType="long" parameterType="SystemMenuQuery">
		select count(*) from t_systemmenu s
		<include refid="whereSql" />
	</select>

	<select id="getSystemMenuTree" resultMap="systemMenuResultMapWithChildren">
		select
		parent.id,parent.name,parent.url,parent.icon,
		child.id cid,child.name
		cname,child.url curl,child.icon cicon
		from t_systemmenu parent
		left join
		t_systemmenu child on(parent.id=child.parent_id)
		where parent.parent_id
		is null
	</select>

	<resultMap type="systemMenu" id="systemMenuResultMapWithChildren">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<!-- 子部门 -->
		<collection property="children" ofType="SystemMenu">
			<id column="cid" property="id" />
			<result column="cname" property="name" />
		</collection>
	</resultMap>

	<!-- <resultMap type="SystemMenu" id="menuTree"> <id column="cid" property="id" 
		/> <result column="cname" property="name" /> <result column="cicon" property="icon" 
		/> <result column="curl" property="url" /> <collection property="children" 
		ofType="SystemMenu" javaType="arrayList"> <id column="id" property="id" /> 
		<result column="name" property="name" /> <result column="url" property="url" 
		/> <result column="icon" property="icon" /> </collection> </resultMap> -->



</mapper> 